{"version":3,"file":"js/193.56583db7.js","mappings":"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","sources":["webpack://online-test/./src/components/shared-components/AppButton.vue","webpack://online-test/src/components/shared-components/AppButton.vue","webpack://online-test/./src/components/shared-components/AppButton.vue?6fd0","webpack://online-test/./src/components/shared-components/AppButton.vue?3f34","webpack://online-test/./src/views/site/test/index.vue","webpack://online-test/src/views/site/test/index.vue","webpack://online-test/./src/views/site/test/index.vue?7150","webpack://online-test/./src/views/site/test/index.vue?35b9","webpack://online-test/./src/constants/test.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c(_vm.tag,_vm._g(_vm._b({tag:\"component\",staticClass:\"a-btn\",class:_vm.className,style:(_vm.style),attrs:{\"type\":_vm.type,\"disabled\":_vm.disabled}},'component',_vm.$attrs,false),_vm.listeners),[_vm._t(\"default\")],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <component\n    class=\"a-btn\"\n    :class=\"className\"\n    :style=\"style\"\n    :type=\"type\"\n    :is=\"tag\"\n    v-bind=\"$attrs\"\n    v-on=\"listeners\"\n    :disabled=\"disabled\"\n  >\n    <slot />\n  </component>\n</template>\n<script>\nimport \"../../assets/styles/components/app-button.scss\";\nexport default {\n  name: \"AppButton\",\n  props: {\n    tag: {\n      type: String,\n      default: \"button\",\n    },\n    sides: {\n      type: [Number, String],\n      default: 0,\n    },\n    height: {\n      type: [Number, String],\n      default: 50,\n    },\n    width: {\n      type: [Number, String],\n    },\n    radius: {\n      type: [Number, String],\n      default: 10,\n    },\n    fontSize: {\n      type: [Number, String],\n      default: 18,\n    },\n    weight: {\n      type: [Number, String],\n      default: 600,\n    },\n    theme: {\n      type: String,\n      default: \"default\",\n    },\n    disabled: {\n      type: Boolean,\n    },\n    textColor: {\n      type: String,\n    },\n    outline: {\n      type: Boolean,\n    },\n    noFocus: {\n      type: Boolean,\n    },\n    type: {\n      type: String,\n      default: \"button\",\n    },\n    shadow: {\n      type: String,\n    },\n    flex: {\n      type: Boolean,\n    },\n  },\n  computed: {\n    className() {\n      const name = \"a-btn--\";\n      const className = [\n        name + \"sd-\" + this.sides,\n        name + \"rd-\" + this.radius,\n        name + \"fn-\" + this.fontSize,\n        name + \"wg-\" + this.weight,\n        name + \"hg-\" + this.height,\n        name + \"th-\" + this.theme,\n      ];\n      if (this.flex) {\n        className.push(name + \"fl\");\n      }\n      if (this.width) {\n        className.push(name + \"wd\");\n      }\n      if (this.outline) {\n        className.push(name + \"line\");\n      }\n      if (this.textColor) {\n        className.push(name + \"cl-\" + this.textColor);\n      }\n      if (this.noFocus) {\n        className.push(name + \"nf\");\n      }\n      if (this.shadow) {\n        className.push(name + \"shadow-\" + this.shadow);\n      }\n      return className;\n    },\n    style() {\n      const styles = {};\n      if (this.width) {\n        styles[\"--wd\"] = this.width + \"px\";\n      }\n      return styles;\n    },\n    listeners() {\n      if (this.disabled) return {};\n\n      return {\n        click: (event) => this.$emit(\"click\", event),\n      };\n    },\n  },\n};\n</script>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./AppButton.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./AppButton.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./AppButton.vue?vue&type=template&id=8e942230&\"\nimport script from \"./AppButton.vue?vue&type=script&lang=js&\"\nexport * from \"./AppButton.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('section',{staticClass:\"py-20\",staticStyle:{\"background-color\":\"rgb(242 242 242)\"}},[_c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"test\"},[_c('div',{staticClass:\"test__left radius\"},_vm._l((_vm.rawTests),function(test){return _c('div',{key:test.id,ref:'test_' + test.id,refInFor:true,staticClass:\"test__body\"},[_c('div',{staticClass:\"test__subject\"},[_c('div',{staticClass:\"test__title bg-white radius\",staticStyle:{\"position\":\"sticky\",\"top\":\"-0.5px\",\"right\":\"0\",\"left\":\"0\",\"z-index\":\"10\"}},[_c('div',{staticClass:\"d-flex align-center justify-space-between\",class:_vm.isDesktopSmall ? 'pa-15' : 'pa-30'},[_c('AppText',{attrs:{\"size\":_vm.isMobile ? 14 : 16,\"weight\":\"600\"}},[_vm._v(\" \"+_vm._s(test.name)+\" \")]),_c('AppText',{attrs:{\"size\":14,\"weight\":\"400\"}},[_vm._v(\" \"+_vm._s(_vm.answeredQuestionsCount(test.id))+\" / \"+_vm._s(test?.questions?.length)+\" savollar \")])],1)]),_vm._l((test.questions),function(question,s){return _c('div',{key:s,ref:'question_' + test.id + '_' + question.id,refInFor:true,staticClass:\"test__question bg-white radius\",class:_vm.isDesktopSmall ? 'pa-15' : 'pa-30'},[_c('span',{staticClass:\"test__question-title d-flex mb-10\"},[_c('AppText',{staticClass:\"mr-10\",attrs:{\"size\":_vm.isMobile ? 14 : 16,\"line-height\":_vm.isMobile ? 20 : 28,\"weight\":\"600\"}},[_vm._v(\" \"+_vm._s(s + 1)+\". \")]),_c('AppText',{attrs:{\"size\":_vm.isMobile ? 14 : 16,\"line-height\":_vm.isMobile ? 20 : 28,\"weight\":\"500\"}},[_c('span',{domProps:{\"innerHTML\":_vm._s(question.question)}})])],1),_c('div',{staticClass:\"test__answers\"},_vm._l((question.answers),function(answer,i){return _c('div',{key:i,staticClass:\"test__answers-title d-flex radius pointer\",class:{\n                    active: _vm.alreadySelected(test.id, question.id) === i + 1,\n                  },on:{\"click\":function($event){return _vm.selectAnswer(test.id, question.id, i + 1)}}},[_c('AppText',{staticClass:\"mr-5\",attrs:{\"size\":_vm.isMobile ? 14 : 16,\"line-height\":_vm.isMobile ? 20 : 24,\"weight\":\"600\"}},[_vm._v(\" \"+_vm._s(_vm.answerLabels[i])+\". \")]),_c('AppText',{attrs:{\"size\":_vm.isMobile ? 14 : 14,\"line-height\":_vm.isMobile ? 20 : 24,\"weight\":\"500\"}},[_c('span',{domProps:{\"innerHTML\":_vm._s(answer)}})])],1)}),0)])})],2)])}),0),_c('div',{staticClass:\"test__right\"},[_c('div',{staticClass:\"bg-white radius mb-10\",class:_vm.isDesktopSmall ? 'pa-10' : 'pa-20'},[_c('div',{staticClass:\"d-flex justify-space-between align-center\"},[_c('div',{staticClass:\"d-flex flex-column justify-content-center text-start\",staticStyle:{\"gap\":\"0.25rem\",\"min-width\":\"110px\"}},[_c('AppText',{staticClass:\"color-secondary\",attrs:{\"size\":_vm.isMobile ? 16 : 24,\"line-height\":_vm.isMobile ? 16 : 24,\"weight\":\"700\"}},[_vm._v(\" \"+_vm._s(_vm.timerFormat(_vm.testTimer))+\" \")]),_c('AppText',{attrs:{\"size\":_vm.isMobile ? 12 : 14,\"line-height\":_vm.isMobile ? 12 : 14,\"weight\":\"500\"}},[_vm._v(\" Qolgan vaqt \")])],1),_c('AppButton',{attrs:{\"theme\":\"red\",\"font-size\":_vm.isMobileSmall ? 14 : _vm.isMobile ? 14 : 16,\"sides\":_vm.isMobileSmall ? 10 : _vm.isMobile ? 20 : 30,\"radius\":_vm.isMobileSmall ? '8' : '50',\"height\":_vm.isMobileSmall ? '40' : '50'},on:{\"click\":_vm.testFinish}},[_vm._v(\" Tugatish \")])],1)]),_c('section',{style:(_vm.isDesktopSmall ? 'display:none' : '')},[_c('div',{staticClass:\"block-pagination__links\"},_vm._l((_vm.rawTests),function(test){return _c('div',{key:test.id,staticClass:\"bg-white radius\",class:_vm.isDesktopSmall ? 'pa-10' : 'pa-20'},[_c('div',[_c('div',{staticClass:\"block-pagination__header mb-10\"},[_c('div',{staticClass:\"d-flex align-center justify-space-between\"},[_c('AppText',{staticClass:\"pointer mr-10\",attrs:{\"size\":_vm.isMobile ? 16 : 18,\"line-height\":_vm.isMobile ? 20 : 28,\"weight\":\"700\"},on:{\"click\":function($event){$event.preventDefault();return _vm.scrollToTest(test.id)}}},[_vm._v(\" \"+_vm._s(test.name)+\" \")]),_c('AppText',{attrs:{\"size\":_vm.isMobile ? 14 : 16,\"line-height\":_vm.isMobile ? 20 : 28,\"weight\":\"600\"}},[_vm._v(\" \"+_vm._s(test.question_ball)+\" ball \")])],1)]),_c('ul',_vm._l((test.questions),function(question,index){return _c('li',{key:question.id,staticClass:\"pqitem\",class:{\n                      active: _vm.alreadySelected(test.id, question.id) !== -1,\n                    },on:{\"click\":function($event){$event.preventDefault();return _vm.scrollToQuestion(test.id, question.id)}}},[_c('a',{staticClass:\"pq\",attrs:{\"href\":'#question_' + (index + 1),\"id\":'pq_' + question.id}},[_vm._v(\" \"+_vm._s(index + 1)+\" \")])])}),0)])])}),0)])])])])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <section class=\"py-20\" style=\"background-color: rgb(242 242 242)\">\n    <div class=\"container\">\n      <div class=\"test\">\n        <div class=\"test__left radius\">\n          <div\n            class=\"test__body\"\n            v-for=\"test in rawTests\"\n            :key=\"test.id\"\n            :ref=\"'test_' + test.id\"\n          >\n            <div class=\"test__subject\">\n              <div\n                class=\"test__title bg-white radius\"\n                style=\"\n                  position: sticky;\n                  top: -0.5px;\n                  right: 0;\n                  left: 0;\n                  z-index: 10;\n                \"\n              >\n                <div\n                  class=\"d-flex align-center justify-space-between\"\n                  :class=\"isDesktopSmall ? 'pa-15' : 'pa-30'\"\n                >\n                  <AppText :size=\"isMobile ? 14 : 16\" weight=\"600\">\n                    {{ test.name }}\n                  </AppText>\n                  <AppText :size=\"14\" weight=\"400\">\n                    {{ answeredQuestionsCount(test.id) }} /\n                    {{ test?.questions?.length }} savollar\n                  </AppText>\n                </div>\n              </div>\n              <div\n                class=\"test__question bg-white radius\"\n                :class=\"isDesktopSmall ? 'pa-15' : 'pa-30'\"\n                v-for=\"(question, s) in test.questions\"\n                :key=\"s\"\n                :ref=\"'question_' + test.id + '_' + question.id\"\n              >\n                <span class=\"test__question-title d-flex mb-10\">\n                  <AppText\n                    class=\"mr-10\"\n                    :size=\"isMobile ? 14 : 16\"\n                    :line-height=\"isMobile ? 20 : 28\"\n                    weight=\"600\"\n                  >\n                    {{ s + 1 }}.\n                  </AppText>\n                  <AppText\n                    :size=\"isMobile ? 14 : 16\"\n                    :line-height=\"isMobile ? 20 : 28\"\n                    weight=\"500\"\n                  >\n                    <span v-html=\"question.question\"></span>\n                  </AppText>\n                </span>\n                <div class=\"test__answers\">\n                  <div\n                    class=\"test__answers-title d-flex radius pointer\"\n                    v-for=\"(answer, i) in question.answers\"\n                    @click=\"selectAnswer(test.id, question.id, i + 1)\"\n                    :class=\"{\n                      active: alreadySelected(test.id, question.id) === i + 1,\n                    }\"\n                    :key=\"i\"\n                  >\n                    <AppText\n                      :size=\"isMobile ? 14 : 16\"\n                      :line-height=\"isMobile ? 20 : 24\"\n                      weight=\"600\"\n                      class=\"mr-5\"\n                    >\n                      {{ answerLabels[i] }}.\n                    </AppText>\n                    <AppText\n                      :size=\"isMobile ? 14 : 14\"\n                      :line-height=\"isMobile ? 20 : 24\"\n                      weight=\"500\"\n                    >\n                      <span v-html=\"answer\"></span>\n                    </AppText>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"test__right\">\n          <div\n            class=\"bg-white radius mb-10\"\n            :class=\"isDesktopSmall ? 'pa-10' : 'pa-20'\"\n          >\n            <div class=\"d-flex justify-space-between align-center\">\n              <div\n                class=\"d-flex flex-column justify-content-center text-start\"\n                style=\"gap: 0.25rem; min-width: 110px\"\n              >\n                <AppText\n                  :size=\"isMobile ? 16 : 24\"\n                  :line-height=\"isMobile ? 16 : 24\"\n                  weight=\"700\"\n                  class=\"color-secondary\"\n                >\n                  {{ timerFormat(testTimer) }}\n                </AppText>\n                <AppText\n                  :size=\"isMobile ? 12 : 14\"\n                  :line-height=\"isMobile ? 12 : 14\"\n                  weight=\"500\"\n                >\n                  Qolgan vaqt\n                </AppText>\n              </div>\n              <AppButton\n                theme=\"red\"\n                :font-size=\"isMobileSmall ? 14 : isMobile ? 14 : 16\"\n                :sides=\"isMobileSmall ? 10 : isMobile ? 20 : 30\"\n                :radius=\"isMobileSmall ? '8' : '50'\"\n                :height=\"isMobileSmall ? '40' : '50'\"\n                @click=\"testFinish\"\n              >\n                Tugatish\n              </AppButton>\n            </div>\n          </div>\n          <section :style=\"isDesktopSmall ? 'display:none' : ''\">\n            <div class=\"block-pagination__links\">\n              <div\n                class=\"bg-white radius\"\n                :class=\"isDesktopSmall ? 'pa-10' : 'pa-20'\"\n                v-for=\"test in rawTests\"\n                :key=\"test.id\"\n              >\n                <div>\n                  <div class=\"block-pagination__header mb-10\">\n                    <div class=\"d-flex align-center justify-space-between\">\n                      <AppText\n                        class=\"pointer mr-10\"\n                        :size=\"isMobile ? 16 : 18\"\n                        :line-height=\"isMobile ? 20 : 28\"\n                        weight=\"700\"\n                        @click.prevent=\"scrollToTest(test.id)\"\n                      >\n                        {{ test.name }}\n                      </AppText>\n                      <AppText\n                        :size=\"isMobile ? 14 : 16\"\n                        :line-height=\"isMobile ? 20 : 28\"\n                        weight=\"600\"\n                      >\n                        {{ test.question_ball }} ball\n                      </AppText>\n                    </div>\n                  </div>\n                  <ul>\n                    <li\n                      class=\"pqitem\"\n                      v-for=\"(question, index) in test.questions\"\n                      :key=\"question.id\"\n                      @click.prevent=\"scrollToQuestion(test.id, question.id)\"\n                      :class=\"{\n                        active: alreadySelected(test.id, question.id) !== -1,\n                      }\"\n                    >\n                      <a\n                        class=\"pq\"\n                        :href=\"'#question_' + (index + 1)\"\n                        :id=\"'pq_' + question.id\"\n                      >\n                        {{ index + 1 }}\n                      </a>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n\n<script>\nimport AppButton from \"@/components/shared-components/AppButton.vue\";\nimport { mapGetters, mapMutations } from \"vuex\";\nimport test from \"../../../constants/test\";\n\nexport default {\n  name: \"AppTest\",\n  components: { AppButton },\n  data() {\n    return {\n      questions: [\n        {\n          questions: [],\n          subjectName: null,\n        },\n      ],\n      rawTests: [],\n      onlineTestAnswers: false,\n      blockTestAnswers: false,\n      testTypeProperty: test.TYPE_ONLINE,\n      onlineTestResult: [\n        {\n          science: \"Matematika\",\n          correct_ans: 0,\n          incorrect_ans: 0,\n          total_ball: 0.0,\n          questions: [\n            {\n              question_id: 9,\n              picked: false,\n              isTrue: false,\n            },\n          ],\n        },\n      ],\n      testResultTotals: {\n        testCount: 0,\n        testAnswerBalls: 0,\n        rightAnswersCount: 0,\n        rightAnswersBalls: 0,\n      },\n      testTimer: 0,\n      answerLabels: [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\"],\n      selectedAnswers: [],\n      testFinished: false,\n    };\n  },\n  computed: {\n    ...mapGetters([\"selectedQuestionIndex\", \"selectedSubjectId\", \"testType\"]),\n  },\n  methods: {\n    ...mapMutations([]),\n    scrollToTest(testId) {\n      const testElement = this.$refs[\"test_\" + testId][0];\n      if (testElement) {\n        testElement.scrollIntoView({ behavior: \"smooth\" });\n      }\n    },\n    scrollToQuestion(testId, questionId) {\n      const questionElement =\n        this.$refs[\"question_\" + testId + \"_\" + questionId][0];\n      if (questionElement) {\n        questionElement.scrollIntoView({ behavior: \"smooth\" });\n      }\n    },\n    readQuestionsFromStorage() {\n      let questions = JSON.parse(localStorage.getItem(\"questions\"));\n      this.testTypeProperty = localStorage.getItem(\"testType\");\n      if (this.testTypeProperty === test.TYPE_ONLINE) {\n        this.rawTests = questions || [];\n      } else {\n        if (questions) {\n          let parametersModel = {\n            id: parseInt(localStorage.getItem(\"science_id\")),\n            name: questions.name || \"\",\n            question_ball: questions.ball,\n            questions: questions.questions.map((question) => {\n              return {\n                id: question.id,\n                question: question.question,\n                answers: [\n                  question.answer1,\n                  question.answer2,\n                  question.answer3,\n                  question.answer4,\n                ],\n              };\n            }),\n          };\n          this.rawTests.push(parametersModel);\n        }\n      }\n    },\n    alreadySelected(testId, questionId) {\n      if (test.TYPE_ONLINE === this.testType) {\n        let examEntry = this.selectedAnswers.find(\n          (entry) => entry.exam_id === testId\n        );\n        if (examEntry) {\n          let questionEntry = examEntry.questions.find(\n            (q) => q.question_id === questionId\n          );\n          return questionEntry ? questionEntry.answer : -1;\n        }\n        return -1;\n      } else {\n        let examEntry = this.selectedAnswers.find(\n          (entry) => entry.science_id === testId\n        );\n        if (examEntry) {\n          let questionEntry = examEntry.questions.find(\n            (q) => q.question_id === questionId\n          );\n          return questionEntry ? questionEntry.answer : -1;\n        }\n        return -1;\n      }\n    },\n    selectAnswer(testId, questionId, answerKey = null) {\n      if (test.TYPE_ONLINE === this.testType) {\n        let examEntry = this.selectedAnswers.find(\n          (entry) => entry.exam_id === testId\n        );\n        if (examEntry) {\n          let questionEntry = examEntry.questions.find(\n            (q) => q.question_id === questionId\n          );\n          if (questionEntry) {\n            questionEntry.answer = answerKey;\n          } else {\n            examEntry.questions.push({\n              question_id: questionId,\n              answer: answerKey,\n            });\n          }\n        } else {\n          this.fillSelectedAnswersArray(testId, questionId, answerKey);\n        }\n      } else {\n        let examEntry = this.selectedAnswers.find(\n          (entry) => entry.science_id === testId\n        );\n        if (examEntry) {\n          let questionEntry = examEntry.questions.find(\n            (q) => q.question_id === questionId\n          );\n          if (questionEntry) {\n            questionEntry.answer = answerKey;\n          } else {\n            examEntry.questions.push({\n              question_id: questionId,\n              answer: answerKey,\n            });\n          }\n        } else {\n          this.fillSelectedAnswersArray(testId, questionId, answerKey);\n        }\n      }\n\n      localStorage.removeItem(\"answers\");\n      localStorage.setItem(\"answers\", JSON.stringify(this.selectedAnswers));\n    },\n    fillSelectedAnswersArray(testId, questionId, answerKey = null) {\n      if (test.TYPE_ONLINE === this.testType) {\n        let model = {\n          exam_id: testId,\n          questions: [\n            {\n              question_id: questionId,\n              answer: answerKey,\n            },\n          ],\n        };\n        this.selectedAnswers.push(model);\n      } else {\n        let model = {\n          science_id: testId,\n          questions: [\n            {\n              question_id: questionId,\n              answer: answerKey,\n            },\n          ],\n        };\n        this.selectedAnswers.push(model);\n      }\n    },\n    answeredQuestionsCount(testId) {\n      const examEntry = this.selectedAnswers.find(\n        (entry) => entry.exam_id === testId\n      );\n      return examEntry ? examEntry.questions.length : 0;\n    },\n    testFinish() {\n      try {\n        let answers = JSON.parse(localStorage.getItem(\"answers\"));\n        if (this.testTypeProperty === test.TYPE_ONLINE) {\n          let questions = JSON.parse(localStorage.getItem(\"questions\"));\n          switch (this.testTypeProperty) {\n            case test.TYPE_BLOCK:\n              this.blockTestResults(questions, answers);\n              return;\n            case test.TYPE_SCHOOL:\n              this.subjectTestResults(questions, answers);\n              return;\n            case test.TYPE_ONLINE:\n              this.onlineTestResults(questions, answers);\n              return;\n            default:\n              return null;\n          }\n        } else {\n          let questions = this.rawTests;\n          switch (this.testTypeProperty) {\n            case test.TYPE_BLOCK:\n              this.blockTestResults(questions, answers);\n              return;\n            case test.TYPE_SCHOOL:\n              this.subjectTestResults(questions, answers);\n              return;\n            case test.TYPE_ONLINE:\n              this.onlineTestResults(questions, answers);\n              return;\n            default:\n              return null;\n          }\n        }\n      } catch (e) {\n        console.log(e);\n      } finally {\n        this.testFinished = true;\n      }\n    },\n    onlineTestResults(questions, answers) {\n      const additionalData = {\n        started_time: \"2023-09-09 22:02:20\",\n        finished_time: \"2021-09-09 22:05:30\",\n      };\n      if (!answers) {\n        answers = [];\n      }\n      this.completeAnswers(questions, answers);\n      answers.push(additionalData);\n      this.$http\n        .post(`tests/exam-tests/done/`, answers)\n        .then((res) => {\n          if (res) {\n            this.onlineTestResult = res;\n            localStorage.setItem(\n              \"testResult\",\n              JSON.stringify(this.onlineTestResult)\n            );\n            this.$router.push({ name: \"result-test\" });\n          }\n        })\n        .catch((err) => {\n          this.errorNotification(err.response.data.message);\n        });\n    },\n    blockTestResults(questions, answers) {\n      if (!answers) {\n        answers = [];\n      }\n      this.completeAnswers(questions, answers);\n      let result = {\n        science_id: answers[0].science_id,\n        questions: answers[0].questions,\n        time: {\n          started_time: \"2021-09-09 22:05:30\",\n          finished_time: \"2021-09-09 23:02:20\",\n        },\n      };\n      this.$http\n        .post(`tests/sciences-tests/done/`, result)\n        .then((res) => {\n          if (res) {\n            localStorage.setItem(\"testResult\", JSON.stringify([res]));\n            this.$router.push({ name: \"result-test\" });\n          }\n        })\n        .catch((err) => {\n          this.errorNotification(err.response.data.message);\n        });\n    },\n    schoolTestResults() {},\n\n    setTimer() {\n      let _this = this;\n      this.testTimer = parseInt(localStorage.getItem(\"testTime\"));\n      let testTimerInterval = setInterval(function () {\n        if (_this.testTimer / 60 <= 0) {\n          _this.testFinish();\n          clearInterval(testTimerInterval);\n          return;\n        }\n        _this.testTimer--;\n      }, 1000);\n    },\n    timerFormat(time) {\n      let sec_num = parseInt(time, 10);\n      let hours = Math.floor(sec_num / 3600);\n      let minutes = Math.floor((sec_num - hours * 3600) / 60);\n      let seconds = sec_num - hours * 3600 - minutes * 60;\n      if (hours < 10) {\n        hours = \"0\" + hours;\n      }\n      if (minutes < 10) {\n        minutes = \"0\" + minutes;\n      }\n      if (seconds < 10) {\n        seconds = \"0\" + seconds;\n      }\n      return hours + \":\" + minutes + \":\" + seconds;\n    },\n\n    closeModal() {\n      this.onlineTestAnswers = false;\n    },\n    closeBlockTestResultModal() {\n      this.blockTestAnswers = false;\n    },\n\n    completeAnswers(questions, answers) {\n      if (test.TYPE_ONLINE === this.testType) {\n        if (answers === null || answers === undefined) {\n          answers = [];\n        }\n        questions.forEach((questionItem) => {\n          let foundExam = answers.find(\n            (answerItem) => answerItem.exam_id === questionItem.id\n          );\n          if (!foundExam) {\n            foundExam = {\n              exam_id: questionItem.id,\n              questions: [],\n            };\n            answers.push(foundExam);\n          }\n          questionItem.questions.forEach((q) => {\n            let foundQuestion = (foundExam.questions || []).find(\n              (a) => a.question_id === q.id\n            );\n            if (!foundQuestion) {\n              foundExam.questions.push({\n                question_id: q.id,\n                answer: null,\n              });\n            }\n          });\n        });\n        return answers;\n      } else {\n        if (answers === null || answers === undefined) {\n          answers = [];\n        }\n        questions.forEach((questionItem) => {\n          let foundExam = answers.find(\n            (answerItem) => answerItem.science_id === questionItem.id\n          );\n          if (!foundExam) {\n            foundExam = {\n              science_id: questionItem.id,\n              questions: [],\n            };\n            answers.push(foundExam);\n          }\n          questionItem.questions.forEach((q) => {\n            let foundQuestion = (foundExam.questions || []).find(\n              (a) => a.question_id === q.id\n            );\n            if (!foundQuestion) {\n              foundExam.questions.push({\n                question_id: q.id,\n                answer: null,\n              });\n            }\n          });\n        });\n        return answers;\n      }\n    },\n\n    parseQuestion(question) {\n      const formatMappings = [\n        { search: /\\\\ldots/g, replace: \"...\" },\n        { search: /\\\\par\\s+/g, replace: \"<br>\" },\n        { search: /~/g, replace: \" \" },\n        { search: /{\\\\bf(.*?)}/g, replace: \"<strong>$1</strong>\" },\n        { search: /\\\\textit{(.*?)}/g, replace: \"<i>$1</i>\" },\n        {\n          search: /\\\\frac{(.*?)}{(.*?)}/g,\n          replace: \"<sup>$1</sup>&frasl;<sub>$2</sub>\",\n        },\n        { search: /\\^(.*?)}{(.*?)}/g, replace: \"<sup>$1</sup>\" },\n        { search: /\\\\begin{table}/g, replace: \"<table>\" },\n        { search: /\\\\end{table}/g, replace: \"</table>\" },\n        { search: /\\\\begin{tabular}/g, replace: \"<tbody>\" },\n        { search: /\\\\end{tabular}/g, replace: \"</tbody>\" },\n        { search: /\\\\begin{figure}/g, replace: \"\" },\n        { search: /\\\\end{figure}/g, replace: \"\" },\n        {\n          search: /\\\\includegraphics\\[.*?\\]{(.*?)}/g,\n          replace: \"<img src='$1' alt='Image'>\",\n        },\n      ];\n      let processed = question;\n      formatMappings.forEach((mapping) => {\n        processed = processed.replace(mapping.search, mapping.replace);\n      });\n      return processed;\n    },\n  },\n  watch: {\n    testType() {\n      this.testTypeProperty = this.testType;\n    },\n  },\n  mounted() {\n    this.testTypeProperty = this.testType;\n    let storedAnswers = localStorage.getItem(\"answers\");\n    if (storedAnswers) {\n      this.selectedAnswers = JSON.parse(storedAnswers);\n    }\n  },\n  created() {\n    this.readQuestionsFromStorage();\n    this.setTimer();\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"../../../assets/styles/abstracts/variables\";\n\n.test {\n  display: flex;\n  flex-direction: column;\n  height: calc(100vh - 130px);\n  gap: 2rem;\n  &__left {\n    height: calc(100vh - 130px);\n    flex-grow: 1;\n    overflow: auto;\n    order: 1;\n    &::-webkit-scrollbar {\n      display: none;\n    }\n  }\n  &__right {\n  }\n  &__body {\n  }\n  &__subject {\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n    gap: 0.75rem;\n    margin-bottom: 0.75rem;\n  }\n  &__title {\n    box-shadow: 0px 10px 13px rgba(17, 38, 146, 0.05);\n  }\n  &__question {\n    &-title {\n    }\n  }\n  &__answers {\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n    &-title {\n      background-color: rgb(245, 247, 249);\n      padding: 0.75rem 1rem;\n      transition-property: color, background-color, border-color,\n        text-decoration-color, fill, stroke;\n      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n      transition-duration: 0.15s;\n\n      &:hover {\n        background-color: rgba(0, 76, 151, 0.08);\n      }\n      &.active {\n        background-color: #004c97;\n        color: #fff !important;\n      }\n    }\n  }\n  &__wrap {\n    display: flex;\n    align-items: center;\n    flex-wrap: wrap;\n  }\n  &__photo {\n    max-width: 270px;\n    max-height: 700px;\n    width: 100%;\n    overflow: hidden;\n    img {\n      width: 100%;\n      object-fit: contain;\n    }\n  }\n  .block-pagination {\n    &__links {\n      display: grid;\n      gap: 0.75rem;\n      ul {\n        display: flex;\n        flex-wrap: wrap;\n        gap: 0.5rem;\n        li {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          width: 2.5rem;\n          height: 2.5rem;\n          color: #004c97;\n          background-color: rgba(0, 76, 151, 0.08);\n          border-radius: 10px;\n          -webkit-transition: all 0.1s ease;\n          transition: background-color 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n          cursor: pointer;\n          overflow: hidden;\n          &:hover {\n            background-color: #004c97;\n            color: #fff;\n            border: none;\n          }\n          &.active {\n            background-color: #004c97;\n            color: #fff;\n            border: none;\n          }\n          a {\n            width: 100%;\n            height: 100%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n          }\n        }\n      }\n    }\n    &__subject {\n    }\n    &__header {\n      color: #004c97 !important;\n    }\n  }\n}\n\n@media (min-width: 1024px) {\n  .test {\n    align-items: flex-start;\n    flex-direction: row;\n    &__left {\n      width: 70%;\n      position: sticky;\n      top: 104px;\n      order: 0;\n    }\n    &__right {\n      display: flex;\n      flex-direction: column;\n      flex-shrink: 0;\n      width: 30%;\n      height: calc(100vh - 130px);\n      section {\n        overflow-y: auto;\n        &::-webkit-scrollbar {\n          display: none;\n        }\n      }\n    }\n  }\n}\n</style>\n","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=99338eba&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=99338eba&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"99338eba\",\n  null\n  \n)\n\nexport default component.exports","export default {\n  TYPE_ONLINE: \"online\",\n  TYPE_BLOCK: \"block\",\n  TYPE_SCHOOL: \"school\",\n  TYPE_PRESIDENT: \"prezident\",\n  TYPE_ATTESTATION: \"attestation\",\n  TYPE_PISA: \"pisa\",\n};\n"],"names":["render","_vm","this","_c","_self","tag","_g","_b","staticClass","class","className","style","attrs","type","disabled","$attrs","listeners","_t","staticRenderFns","name","props","String","default","sides","Number","height","width","radius","fontSize","weight","theme","Boolean","textColor","outline","noFocus","shadow","flex","computed","push","styles","click","event","$emit","component","staticStyle","_l","rawTests","test","key","id","ref","refInFor","isDesktopSmall","isMobile","_v","_s","answeredQuestionsCount","questions","length","question","s","domProps","answers","answer","i","active","alreadySelected","on","$event","selectAnswer","answerLabels","timerFormat","testTimer","isMobileSmall","testFinish","preventDefault","scrollToTest","question_ball","index","scrollToQuestion","components","AppButton","data","subjectName","onlineTestAnswers","blockTestAnswers","testTypeProperty","onlineTestResult","science","correct_ans","incorrect_ans","total_ball","question_id","picked","isTrue","testResultTotals","testCount","testAnswerBalls","rightAnswersCount","rightAnswersBalls","selectedAnswers","testFinished","mapGetters","methods","mapMutations","testId","testElement","$refs","scrollIntoView","behavior","questionId","questionElement","readQuestionsFromStorage","JSON","parse","localStorage","getItem","parametersModel","parseInt","ball","map","answer1","answer2","answer3","answer4","testType","examEntry","find","entry","exam_id","questionEntry","q","science_id","answerKey","fillSelectedAnswersArray","removeItem","setItem","stringify","model","blockTestResults","subjectTestResults","onlineTestResults","e","console","log","additionalData","started_time","finished_time","completeAnswers","$http","post","then","res","$router","catch","err","errorNotification","response","message","result","time","schoolTestResults","setTimer","_this","testTimerInterval","setInterval","clearInterval","sec_num","hours","Math","floor","minutes","seconds","closeModal","closeBlockTestResultModal","undefined","forEach","questionItem","foundExam","answerItem","foundQuestion","a","parseQuestion","formatMappings","search","replace","processed","mapping","watch","mounted","storedAnswers","created","TYPE_ONLINE","TYPE_BLOCK","TYPE_SCHOOL","TYPE_PRESIDENT","TYPE_ATTESTATION","TYPE_PISA"],"sourceRoot":""}